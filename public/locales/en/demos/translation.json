{
    "demo_projects": "Demo projects",

    "introduction": "Here you can find some personal projects I've been working on for demonstration and/or learning purposes. These are projects you can try out and view the source code.",


    "mobile_development": "Mobile development",
    "mobile_projects": [
        {
            "title": "Awale",
            "content": "<p>Strategic board game between two players. In this case, the application allows playing against the computer, as well as simply acting as a board game and allowing play between two people.</p><p>This project puts into practice skills acquired during the <span class='bold'>Android Developer</span> program, as well as the <span class='italica'>minmax + alpha-beta pruning</span> algorithm from the <span class=bold>Artificial Intelligence</span> subject of the Computer Engineering degree. The graphics are self-created, vector-based, and the game is published in the Android store.</p>",
            "image_url": "/images/demos/awale.png",
            "tags": ["Kotlin", "Android", "Alpha-beta-pruning"],
            "urls": [
                {"text": "In the Android Google Play store", "url": "https://play.google.com/store/apps/details?id=sala.xevi.awale"},
                {"text": "GitHub repository", "url": "https://github.com/xsalagarcia/awale"}
            ]
        },
        {
            "title": "Shopping list",
            "content": "<p>Shopping list management application. All data is offline meaning it focuses on managing data locally on the phone. It allows you to create categories to associate products with them, which you can add notes to and mark for purchase, whether urgent or not. All this allows you to filter the list with different criteria. </p><p>It was created with the intention of working with concepts such as <span class='bold'>ViewModel</span>, <span class='bold'>LiveData</span>, <span class='bold'>Room</span>, and <span class='bold'>RecyclerView</span>, which allow you to efficiently display large lists of data and store the data locally using <span class='bold'>SQLite</span>, structured using the ORM offered by the Android API.</p>",
            "image_url": "/images/demos/shopping-list.png",
            "tags": ["Kotlin", "Room", "RecyclerView", "LiveData", "Android"],
            "urls": [
                {"text": "In the Android Google Play store", "url": "https://play.google.com/store/apps/details?id=sala.xevi.myprivateshoppinglist"},
                {"text": "GitHub repository", "url": "https://github.com/xsalagarcia/MyPrivateShoppingList"}
            ]

        }
    ],
    "web_development": "Web development",
    "web_projects": [
        {
            "title": "Jonathan assistant",
            "content": "<p>Web application with a back-end programmed in Python, using the <span class='bold'>FastAPI</span> framework and the <span class='bold'>OpenAI</span> API, especially the <span class='bold'>Assistants</span> part. The created assistant, in addition to generating responses based on user input, through instructions and support from the back-end, calls other external APIs such as <span class='bold'>Open-Meteo</span> and <span class='bold'>Geocoding</span> to retrieve exact locations and weather forecasts for the dates indicated by the user. </p><p>The application demonstrates the potential of the assistants offered by <span class='bold'>OpenAI</span> to deal with reliable and updated data, whether from external APIs or private databases, and presents them in an understandable way to the user.</p>",
            "image_url": "/images/demos/assistant.png",
            "tags": ["front-end", "back-end", "Python", "FastAPI", "OpenAI", "Assistants", "API REST", "Redis"],
            "urls": [
                {"text": "Visit Jonathan and interact with him (you will need a code)", "url": "https://assistantdemo.xsalgar.com"},
                {"text": "GitHub repository", "url": "https://github.com/xsalagarcia/Jonathan_assistant"}
            ]
        },
        {
            "title": "Personal website",
            "content": "<p>The website you are visiting is an application created with the <span class='bold'>React</span> library. It also uses the <span class='bold'>i18next</span> and <span class='bold'>react-i18next</span> libraries to manage the different languages ​​​​in which the site is offered, and <span class='bold'>react-router</span> for a better organization of the sections. </p><p>In addition, there is a section with dynamically rendered content (public notes) from obtaining data from an external API, in the notes section, making it possible to dynamically offer new sections and adapt Markdown documentation to display it in HTML format.",
            "image_url": "/images/demos/my-website.png",
            "tags": ["JavaScript", "NodeJS", "React", "i18next", "react-i18next", "react-router", "front-end", "markdownIT"],
            "urls": [
                {"text": "GitHub repository", "url": "https://github.com/xsalagarcia/my_website"}
            ]
        },
        {
            "title": "Personal notes API",
            "content": "<p>A service that supports the <span class='italica'>Public Notes</span> section of this <span class='italica'>website</span>. It allows me to upload and categorize some notes and share original and useful ones. The service is developed with <span class='bold'>Python</span>, using the <span class='bold'>FastAPI</span> framework.</p>",
            "image_url": "/images/demos/notes-api.png",
            "tags": ["Python", "FastAPI", "Redis", "SQLModel", "back-end"],
            "urls": [
                {"text": "GitHub repository", "url": "https://github.com/xsalagarcia/my_notes_API"}
            ]
        }
    ],
    "desktop_and_cli": "CLI and Desktop",
    "desktop_cli_projects": [
        {
            "title": "Agentxs",
            "content": "<p>A wrapper package that experiments with the <span class='bold'>OpenAI Agents</span> Development Kit. Two agents are presented as examples: one for analyzing Python projects and another for analyzing PostgreSQL databases. The code is structured to facilitate the addition of available tools for the agent and the creation of additional agents through the use of inheritance, promoting a layered and modular design.</p> <p>A command-line interface is provided through the <span class='bold'>Typer</span> library, as well as a more advanced interface, halfway between the command line and a graphical interface, through the <span class='bold'>Textual</span> library.</p><p>The OpenAI Agents library/SDK allows for easy building of agents using both OpenAI LLM and others beyond OpenAI, adding tools based on Python functions or MCP servers, among other features.</p>",
            "image_url": "/images/demos/agentxs.png",
            "tags": ["Textual", "Rich", "Python", "OpenAI", "Agents"],
            "urls": [
                {"text": "Repositorio GitHub", "url": "https://github.com/xsalagarcia/agentxs"}
            ]
        }
    ]
    


}